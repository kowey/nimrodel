


nimrodel.title.TITLE-LOOKUP:
	<> == **fail**
	%<$nimrodel-titleword> == 'nimrodel.title.TITLE'
.


nimrodel.title.TITLEROOT:
	<> == nimrodel.LEXROOT
	
	<[ $$n ]> == nimrodel.LEXROOT:<>
	
	<[ $$n ] token type> == title
	<[ $$n ] token pos> == title
	<[ $$n ] token gender> == unknown
	
	<[ $$n ] lex title> == <here token norm .>
	<[ $$n ] lex number> == sing
	
	<[ $$n ] lex> == <[ $$n ] try firstname lex>
	
	<[ $$n ] try firstname> == < [ $$n ] IFEQ:< <here token nextn Add:<$$n 1 .> lex type .> 'Person' 
					     THEN case firstname
					     ELSE try propnoun .> >
	<[ $$n ] try propnoun> == < [ $$n ] IFEQ:< <here token nextn Add:<$$n 1 .> token type .> propnoun
					     THEN case firstname
					     ELSE case default .> >
	
	<[ $$n ] case firstname lex nextrole> == <here token nextn Add:<$$n 1 .> lex nextrole .>
	<[ $$n ] case firstname lex end-char> == <here token nextn Add:<$$n 1 .> lex end-char .>
	<[ $$n ] case firstname lex type> == 'Person'
	<[ $$n ] case firstname lex gender> == <here token nextn Add:<$$n 1 .> lex gender>
	<[ $$n ] case firstname lex output> == <render attr4 lex title <here lex title.> <render extend lex <here token nextn Add:<$$n 1 .> lex output> .> .>	
	<[ $$n ] case firstname> == nimrodel.LEXROOT:<>
	<[ $$n ] case default> == nimrodel.LEXROOT:<>
.

nimrodel.title.TITLE:
	<[ > == nimrodel.title.TITLEROOT:<[>
	<> == <[ 0 ]>
.

nimrodel.title.MALETITLE:
	<> == nimrodel.title.TITLE
	<token gender> == male
.

nimrodel.title.FEMALETITLE:
	<> == nimrodel.title.TITLE
	<token gender> == female
.
	