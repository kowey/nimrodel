
% placename lookup - invoked by lex-lookup at the WORD level
nimrodel.placename.PLACENAMEWORD-LOOKUP:
	<> == elf.TOP
	<lookup $$name> == <try placename nimrodel.placename.IS-PLACENAMEWORD:<$$name.> $$name>
	
	<try placename $$node> == < IF:< $$node THEN case found $$node ELSE case default .> >
	
	<case found $$node> == $$node
	<case default> == **fail**
.

% root node for placename words
nimrodel.placename.PLACENAMEROOT:	
	<> == nimrodel.LEXROOT:<>
	
	<token type> == 'placename'
	% <token norm> == <here token form>
	<lex type> == 'Place'
.

% root node for placename lexical phrases
nimrodel.placename.PHRASEROOT:
	<> == elf.TOP
	<$$i> == nimrodel.phraseutils.PHRASEROOT:< 'nimrodel.placename.PLACENAMEROOT' >
	<$$i lex> == < $$i here < $$i here map nimrodel.context.NEXT:<$$i token context .> .> lex>
	<$$i token context> == token word
	<$$i map> == case <$$i here matchword .>
	<$$i matchword> == nomatch
.

nimrodel.placename.PHRASEMATCH:
	<> == elf.TOP
	<1 $$w1> == nimrodel.placename.PHRASEROOT:<1>
	<1 $$w1 map $$w1> == case skip 1 lex
	<2 $$w1 $$w2> == nimrodel.placename.PHRASEROOT:<2>
	<2 $$w1 $$w2 map $$w1 $$w2> == case skip 2 lex
.



