#hide nimrodel.LEX-TOP.
nimrodel.LEX-TOP:
	<> == elf.STRING-TOP
			
	<token> == nimrodel.model.TOKEN
		
	<params> == nimrodel.model.PARAMS
	
	<pos> == nimrodel.model.POS
	
	<lex> == nimrodel.model.LEX
	<port lexstart> == nimrodel.model.LEX
	<port lexend> == nimrodel.model.LEX
	
	<$phrase> == nimrodel.model.PHRASE
	<port phrasestart> == nimrodel.model.PHRASE
	<port phraseend> == nimrodel.model.PHRASE
	
	<person> == nimrodel.model.PERSON
	
	<subcat> == nimrodel.model.SUBCAT
	
	<sem> == nimrodel.model.SEM
	<port semstart> == nimrodel.model.SEM
	<port semend> == nimrodel.model.SEM
	
	<nimrodel02> == nimrodel.model.NIMRODEL02
		
	<process $$model> == <here all $$model process1 $$model>
	<process1 $$model> == <process2 $$model <here $$model type .> .>
	<process2 $$model $$type> == <case IFEQ:<$$type unknown THEN unknown ELSE output .> $$model $$type .>
	<case unknown> ==
	<case output $$model $$type> == <here $$model output $$type>
	
	%<all $$model> == <allprev $$model> <here> <allnext $$model>
	<all $$model> == <here> <allnext $$model>
	<allprev $$model> == <here $$model prev allprev $$model> <here $$model prev>
	<allnext $$model> == <here $$model next> <here $$model next allnext $$model>
	
	<render> == nimrodel.RENDER
.
	
#hide nimrodel.ENDROOT.
nimrodel.ENDROOT:
	<> == nimrodel.LEX-TOP
	<all> ==
	<allprev> ==
	<allnext> ==
	
	<token pos> == endpoint
	<$model type> == **endpoint**
	<token start-char> == '?'
	<token end-char> == '?'
.

#hide nimrodel.LEXROOT.
nimrodel.LEXROOT:
	<> == nimrodel.LEX-TOP
	
	<$phrase> == <case <here lex cat .> $phrase>
	<sem> == <case <here lex cat .> sem>
	
	<case> == <case2>
	<case det> == nimrodel.phrase.DET:<>
	<case prep> == nimrodel.phrase.PREP:<>
	<case prepp> == nimrodel.phrase.PREPP:<>
	<case pro> == nimrodel.phrase.PRO:<>
	<case propn> == nimrodel.phrase.PROPN:<>
	<case n> == nimrodel.phrase.N:<>
	<case conj> == nimrodel.phrase.CONJ:<>
	<case adj> == nimrodel.phrase.ADJ:<>
	
	<case2 $any> == nimrodel.LEX-TOP:<>
.
	