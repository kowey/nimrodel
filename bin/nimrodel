#!/bin/bash

. "${0%/*}/env"

exit_usage() {
    "$SWIPL" -q -f "$ELFAPP"/swiprolog.pl -g main -t halt -- "-help"
    exit 1
}

save_state() {
    "$SWIPL" -q -f "$ELFAPP"/swiprolog.pl -g save_state -t halt -- "$1"
}

NIMRODEL_IMAGE=$TCROOT/.nimrodel-image
NIMRODEL_SAVED=$TCROOT/.nimrodel-saved

if [ $# -lt 1 ]; then
    exit_usage
fi

CMD=$1
shift

if [ "$CMD" == "direct" ]; then
    NIMRODEL_IMAGE=$SCRIPT_DIR/nimrodel-direct
    chmod u+x "$NIMRODEL_IMAGE"
    CMD=$1
    shift
elif [ ! -e "$NIMRODEL_IMAGE" ]; then
    echo >&2 'Saving nimrodel image for the first time...'
    save_state "$NIMRODEL_IMAGE"
    if [ -e "$TCROOT/.git" ]; then
        LAST_COMMIT=$(git rev-parse HEAD)
        echo "$LAST_COMMIT" > "$NIMRODEL_SAVED"
    fi
elif [ -e "$TCROOT/.git" ]; then
    LAST_COMMIT=$(git rev-parse HEAD --git-dir="$TCROOT")
    SAVED_COMMIT=$(cat "$NIMRODEL_SAVED")
    if [ "$SAVED_COMMIT" != "$LAST_COMMIT" ]; then
        echo >&2 'Nimrodel image seems to be out of date; regenerating...'
        save_state "$TCROOT/.nimrodel-image"
        echo "$LAST_COMMIT" > "$NIMRODEL_SAVED"
    fi
fi


case "$CMD" in
    string)
        "$NIMRODEL_IMAGE" main "$@"
        ;;
    file)
        # undocumented because we still need to generalise this to accept flags
        "$NIMRODEL_IMAGE" on_files "$@"
        ;;
    dir)
        "$NIMRODEL_IMAGE" traverse_dir "$@"
        ;;
    parallel-dir)
        if [ $# -lt 3 ]; then
            exit_usage
        fi
        args=("$@")
        JOBS="${args[$((${#}-3))]}"
        INPUT_DIR="${args[$((${#}-2))]}"
        OUTPUT_DIR="${args[$((${#}-1))]}"
        POPPED="${@:1:$((${#}-3))}"
        { cd "$INPUT_DIR" && find . -mindepth 1 -maxdepth 1 -type d ; } |\
            parallel -j "$JOBS"\
            "$NIMRODEL_IMAGE" traverse_dir\
                 "$POPPED" "$INPUT_DIR/{}" "$OUTPUT_DIR/{}"
        ;;
    selftest)
        "$SWIPL" -q -f "$ELFAPP"/../test/harness.pl -g main -t halt
        ;;
    *)
        if [ "$CMD" == "-version" -o "$CMD" == "-help" ]; then
            "$NIMRODEL_IMAGE" main "$CMD"
        else
            echo >&2 "Unknown command: $CMD"
            echo >&2
            exit_usage
        fi
esac
