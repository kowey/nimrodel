#!/bin/bash

. "${0%/*}/env"

exit_usage() {
    cat >&2 <<END
Usage: $0 COMMAND [ARG]...

Known commands:

    string WORD [WORD]..
         process string formed of command line arguments,
         write results to stdout

    dir INPUT OUTPUT
         process files nested in INPUT dir (arbitrary depth),
         write results to equivalent path in OUTPUT dir

    parallel-dir JOBS INPUT OUTPUT
         like dir, but assume INPUT is divided into subdirectories
         and process JOBS subdirectories in parallel

         (needs GNU parallel installed)

    selftest
         run a small unit test suite
END
    exit 1
}

if [ $# -lt 1 ]; then
    exit_usage
fi

CMD=$1
shift

case "$CMD" in
    string)
        "$SWIPL" -q -f "$ELFAPP"/swiprolog.pl -g main -t halt -- "$@"
        ;;
    dir)
        "$SWIPL" -q -f "$ELFAPP"/swiprolog.pl -g traverse_dir -t halt -- "$@"
        ;;
    parallel-dir)
        JOBS=$1; shift
        INPUT_DIR=$1; shift
        OUTPUT_DIR=$1; shift
        { cd "$INPUT_DIR" && find . -mindepth 1 -maxdepth 1 -type d ; } |\
            parallel -j "$JOBS"\
            "$SWIPL" -q -f "$ELFAPP"/swiprolog.pl -g traverse_dir -t halt --\
                "$INPUT_DIR/{}" "$OUTPUT_DIR/{}" "$@"
        ;;
    selftest)
        "$SWIPL" -q -f "$ELFAPP"/../test/harness.pl -g main -t halt
        ;;
    *)
        exit_usage
esac
