% % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % %
%                                                                           %
% File:            poplog/read_me                                           %
% Purpose:         POPLOG/DATR interface notes                              %
% Author:          Roger Evans                                              %
%                                                                           %
%      Copyright (c) University of Sussex 1994.  All rights reserved.       %
%                                                                           %
% % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % %


IMPORTANT NOTE:
    This version of the POPLOG/DATR interface only works for POPLOG
    versions 14.22 and newer. Older POPLOG versions have a
    different 'subsystems' mechanism which will not work properly
    with this interface.

This subdirectory contains libraries to support integrating the DATR system
into the POPLOG programming environment as a new subsystem. The files
should be installed into the POPLOG local library tree in accordance
with the path names given in their headers. The script install_datr will
attempt to do this for you.

The remainder of this file concerns installation issues. For further
information about the interface itself, see the file 'read_me' in the
main DATR directory.

Full documentation for this interface is not yet written. Interested
parties should contact Sussex for the latest situation about this.

Installation notes
------------------

1)  Renaming files

The following list shows the correct names for the files in this
directory.

    datr
    datr.p
    datr.ph
    datr.pl
    datr_compile.p
    datr_directory.p
    datr_subsystem.p
    install_datr
    mkdatr
    read_me
    rename
    ved_datr.p

If these files have been transported to a Unix system via an MS-DOS
disk, the longer names will have become truncated. They must be renamed
before installation. The script 'rename' will do this for you. Thus
the actions to be taken are as follows:

    -   Compare the directory listing with the above list. If they
        are the same, proceed to note (2).
    -   If they are NOT the same, make sure you are in this directory,
        and give the command:

            % csh rename

2)  Basic installation

The script 'install_datr' will install the DATR interface into the
current POPLOG system. To do this, it does the following three things:

    a)  edits the file datr.ph to reference the directory containing the
        DATR system (the parent of this directory)
    b)  copies files in this directory into appropriate places in the
        $poplocal library tree
    c)  customised the DATR system itself for use with POPLOG

This installation will fail if any of the following conditions are not
met:

    a)  The POPLOG version is older than 14.22 (in which case see
        IMPORTANT NOTE above)
    b)  $poplocal is not defined
    c)  the parent of the current directory is not the DATR system
        directory

Note that the script also checks for the presence in $poplocal of
obsolete libraries from the previous DATR interface. If found, it gives
you the option of removing them. The actions to be taken are as follows:

    -   ensure you are in the poplog interface directory, and that its
        parent directory - the main DATR distribution - is intact
    -   ensure $poplocal points to a correctly organised poplocal tree
    -   give the command:

            % csh install_datr

NB: the DATR distribution directory must be present at runtime for tis
    interface to function. Its location will be compiled into the
    installed version of the POPLOG include file datr.ph
    ($poplocal/local/include/datr.ph). however, this value may be
    overriden at runtime by defining the environment variable $DATR to
    point to the actual location of the DATR distribution directory.

3) Basic testing

A very cursory test that everything is ok may be achieved as follows:

    % pop11
    {sign-on messages}
    : ved foo.p
    {into the editor with a new file}
    <enter> datr src dcg.pl
    {should put up a buffer with the DATR dcg compiler in it}
    <enter> qq
    {now back to shell}
    % prolog
    {sign-on messages}
    ?- library(datr).
    {loading messages}
    ?- datr_compile(user).
    |: N:<a> == 1.          {define a bit of DATR}
    |: N:<a>?               {query it}
    N:<a> = (1).            {should elicit this response}
    |: ctrl-D
    ?- ctrl-D
    {now back to shell}

4)  DATR saved image

The script mkdatr, installed as $poplocal/local/com/mkdatr, creates a
saved image $poplocalbin/datr.psv with both prolog and datr in it. If
datr is going to be used frequently, it may be worth creating this
image, to save startup time. However datr loading is currently fairly
fast, so you may not consider it worthwhile to do this.

Contact Points
--------------

Comments, bug-reports etc. about any aspect of DATR, including this
interface, may be directed to Roger.Evans@iti.brighton..ac.uk


% RCS Data:         $Id: read_me 1.5 1997/11/23 21:01:15 rpe Exp $
